{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/Card.vue?a37b","webpack:///./src/App.vue","webpack:///./src/components/Card.vue","webpack:///./src/components/RaritySelector.vue","webpack:///./src/components/RaritySelector.vue?3aa5","webpack:///./src/Stores/CardStore.js","webpack:///./src/components/Card.vue?790b","webpack:///./src/App.vue?dfb6","webpack:///./src/main.js","webpack:///./src/App.vue?ce43","webpack:///./src/util/generatorics.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","style","id","action","for","$options","cards","card","cost","category","type","stats","playerPower","playerMAmp","playerPAmp","playerCp","playerMCp","playerPCp","playerDmgFromCrit","playerMMod","playerPMod","playerPierce","playerIgnore","partyShred","playerCollectionLevel","collectionLevels","level","bossBaseRes","bossType","bossTypes","ignoreCritCards","calculateBestCards","$data","bestCards","cardName","Math","round","totalDpsGain","class","validRarities","rarity","handleRarityChange","cardState","enabled","toggleState","getRarityColours","mAmp","pAmp","mCp","pCp","cf","mpInc","getRaritySelectorColours","$emit","props","methods","colours","White","Green","Blue","render","Map","components","RaritySelector","this","computed","keys","filter","newRarity","__scopeId","Card","set","maxPoints","maxCardsPerCategory","maxAmountCards","cardStore","calculating","finalBossResist","max","calcPiercePercent","consideredCards","forEach","cardsPerCategory","Monster","Fish","Location","Character","Mount","entries","subsetsPerCategory","clone","combination","bigCartesian","fastCartesian","cartesian","element","totalSize","arr","map","flat","cardSetup","pointCost","subset","totalBonusPamp","totalBonusMamp","totalBonusCf","totalBonusMcp","totalBonusPcp","totalBonusMp","mcp","currentBestSubset","undefined","calcDpsGainAmp","calcDpsGainCrit","console","log","pierce","specialDef","min","bonusPamp","bonusMamp","bonusPcp","bonusMcp","bonusCrit","createApp","App","mount","root","factory","G","heapsAlg","clones","factorial","ans","factoradic","radix","digit","floor","P","k","C","choices","options","replace","ordered","pow","combinationUtil","start","index","size","that","end","permutation","permutationUtil","len","indecesUsed","powerSet","powerUtil","permutationCombination","baseN","baseNUtil","baseNAll","permutationAll","cartesianUtil","sets","shuffle","random","swap","heapsUtil","split","warn","temp"],"mappings":"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","file":"js/app.8587711f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Card.vue?vue&type=style&index=0&id=e40d53b8&scoped=true&lang=css\"","<template>\n\t<div>\n\t\t<header\n\t\t\tstyle=\"display: flex; justify-content: center; align-items: center\"\n\t\t>\n\t\t\t<h1 style=\"margin: 0px; text-align: center\">\n\t\t\t\tTERA Card Calculator\n\t\t\t</h1>\n\t\t</header>\n\t\t<div id=\"mainWrapper\">\n\t\t\t<section id=\"main\">\n\t\t\t\t<Card\n\t\t\t\t\tv-for=\"(card, key) in $options.cards\"\n\t\t\t\t\tv-bind:key=\"key\"\n\t\t\t\t\t:cost=\"card.cost\"\n\t\t\t\t\t:name=\"key\"\n\t\t\t\t\t:category=\"card.category\"\n\t\t\t\t\t:type=\"card.type\"\n\t\t\t\t\t:stats=\"{\n\t\t\t\t\t\tWhite: card.White || null,\n\t\t\t\t\t\tGreen: card.Green || null,\n\t\t\t\t\t\tBlue: card.Blue || null,\n\t\t\t\t\t}\"\n\t\t\t\t></Card>\n\t\t\t</section>\n\n\t\t\t<aside id=\"statInput\">\n\t\t\t\t<h4>PLAYER STATS</h4>\n\t\t\t\t<form action=\"\">\n\t\t\t\t\t<label for=\"playerPower\">Power: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerPower\"\n\t\t\t\t\t\tv-model.number=\"playerPower\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerMAmp\">Magic Amplification: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerMAmp\"\n\t\t\t\t\t\tv-model.number=\"playerMAmp\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerPAmp\">Physical Amplification: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerPAmp\"\n\t\t\t\t\t\tv-model.number=\"playerPAmp\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerCp\">Crit Power: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerCp\"\n\t\t\t\t\t\tv-model.number=\"playerCp\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerMCp\">Magic Crit Power: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerMCp\"\n\t\t\t\t\t\tv-model.number=\"playerMCp\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerPCp\">Physical Crit Power: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerPCp\"\n\t\t\t\t\t\tv-model.number=\"playerPCp\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerDmgFromCrit\"\n\t\t\t\t\t\t>% of Damage done by Crits: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerDmgFromCrit\"\n\t\t\t\t\t\tv-model.number=\"playerDmgFromCrit\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerMMod\">Skill Magic Modifier: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerMMod\"\n\t\t\t\t\t\tv-model.number=\"playerMMod\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerPMod\">Skill Physical Modifier: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerPMod\"\n\t\t\t\t\t\tv-model.number=\"playerPMod\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerPierce\">Piercing: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerPierce\"\n\t\t\t\t\t\tv-model.number=\"playerPierce\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerIgnore\">Ignore Resistance: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"playerIgnore\"\n\t\t\t\t\t\tv-model.number=\"playerIgnore\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"partyShred\">Party Resistance Shred: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"partyShred\"\n\t\t\t\t\t\tv-model.number=\"partyShred\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"playerCollectionLevel\">Collection Level: </label\n\t\t\t\t\t><select\n\t\t\t\t\t\tname=\"playerCollectionLevel\"\n\t\t\t\t\t\tv-model=\"playerCollectionLevel\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tv-for:=\"(level, key) in $options.collectionLevels\"\n\t\t\t\t\t\t\tv-bind:key=\"key\"\n\t\t\t\t\t\t\t:value=\"level\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ key }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t</form>\n\n\t\t\t\t<h4>TARGET</h4>\n\t\t\t\t<form>\n\t\t\t\t\t<label for=\"bossBaseRes\">Boss Base Resistance: </label\n\t\t\t\t\t><input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"bossBaseRes\"\n\t\t\t\t\t\tv-model.number=\"bossBaseRes\"\n\t\t\t\t\t/>\n\n\t\t\t\t\t<label for=\"bossType\">Boss Type: </label\n\t\t\t\t\t><select name=\"bossType\" v-model=\"bossType\">\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tv-for=\"type in $options.bossTypes\"\n\t\t\t\t\t\t\tv-bind:key=\"type\"\n\t\t\t\t\t\t\t:value=\"type\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ type }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t</form>\n\t\t\t\t<hr />\n\t\t\t\t<label for=\"ignoreCritCards\">Ignore Crit Factor Cards</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tname=\"ignoreCritCards\"\n\t\t\t\t\tid=\"ignoreCritCards\"\n\t\t\t\t\tv-model=\"ignoreCritCards\"\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<button v-on:click=\"calculateBestCards\">Calculate</button>\n\t\t\t\t<hr />\n\t\t\t\t<section id=\"results\">\n\t\t\t\t\t<h4>OPTIMAL SETUP:</h4>\n\t\t\t\t\t<p v-if=\"$data.bestCards.length == 0\" style=\"padding: 1rem\">\n\t\t\t\t\t\tCalculating best setup might take a few seconds... don't\n\t\t\t\t\t\tworry, the site didn't freeze.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p v-for=\"cardName in $data.bestCards\" :key=\"cardName\">\n\t\t\t\t\t\t{{ cardName }}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p v-if=\"$data.bestCards.length != 0\">\n\t\t\t\t\t\tDPS gained:\n\t\t\t\t\t\t{{ Math.round($data.bestCards.totalDpsGain * 100) }}%\n\t\t\t\t\t</p>\n\t\t\t\t</section>\n\t\t\t</aside>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport Card from \"./components/Card.vue\";\nimport cards from \"./data/cards.json\";\nimport bossTypes from \"./data/types.json\";\nimport collectionLevels from \"./data/collectionLevels.json\";\n\nimport cardStore from \"./Stores/CardStore\";\n\nimport G from \"./util/generatorics\";\n\nexport default {\n\tname: \"App\",\n\tcomponents: {\n\t\tCard,\n\t},\n\tdata() {\n\t\tfor (const name of Object.keys(cards)) {\n\t\t\tcardStore.cards.set(name, {\n\t\t\t\tenabled: true,\n\t\t\t\trarity: \"Green\",\n\t\t\t});\n\t\t}\n\t\treturn {\n\t\t\tplayerPower: 0,\n\t\t\tplayerCp: 0,\n\t\t\tplayerMCp: 0,\n\t\t\tplayerPCp: 0,\n\t\t\tplayerMAmp: 0,\n\t\t\tplayerPAmp: 0,\n\t\t\tplayerPierce: 0,\n\t\t\tplayerIgnore: 0,\n\n\t\t\tplayerMMod: 0,\n\t\t\tplayerPMod: 0,\n\n\t\t\tpartyShred: 0,\n\t\t\tbossBaseRes: 0,\n\t\t\tplayerDmgFromCrit: 0,\n\t\t\tignoreCritCards: false,\n\t\t\tbossType: \"\",\n\n\t\t\tplayerCollectionLevel: {\n\t\t\t\tmaxPoints: 9,\n\t\t\t\tmaxCardsPerCategory: 1,\n\t\t\t\tmaxAmountCards: 2,\n\t\t\t},\n\t\t\tbestCards: [],\n\t\t\tcardStore,\n\t\t\tcalculating: false,\n\t\t};\n\t},\n\tmethods: {\n\t\tcalculateBestCards() {\n\t\t\tthis.calculating = true;\n\t\t\tif (this.playerDmgFromCrit > 1) this.playerDmgFromCrit /= 100;\n\t\t\tthis.bestCards = [];\n\t\t\t//STEP 0: calculate bosses final resistance value\n\t\t\tconst finalBossResist = Math.max(\n\t\t\t\t(this.bossBaseRes - this.partyShred - this.playerIgnore) *\n\t\t\t\t\t(1 -\n\t\t\t\t\t\tthis.calcPiercePercent(\n\t\t\t\t\t\t\tthis.playerPierce,\n\t\t\t\t\t\t\tthis.bossBaseRes -\n\t\t\t\t\t\t\t\tthis.partyShred -\n\t\t\t\t\t\t\t\tthis.playerIgnore\n\t\t\t\t\t\t)),\n\t\t\t\t-33333\n\t\t\t);\n\n\t\t\t//STEP 1, grab subset of cards that are not disabled and fit the specified monster type\n\t\t\tconst consideredCards = {};\n\t\t\tcardStore.cards.forEach((card, key) => {\n\t\t\t\tif (\n\t\t\t\t\t(card.enabled &&\n\t\t\t\t\t\tthis.bossType === \"\" &&\n\t\t\t\t\t\t!cards[key].type) ||\n\t\t\t\t\t(card.enabled &&\n\t\t\t\t\t\tthis.bossType !== \"\" &&\n\t\t\t\t\t\tthis.bossType === cards[key].type) ||\n\t\t\t\t\t(card.enabled && this.bossType !== \"\" && !cards[key].type)\n\t\t\t\t) {\n\t\t\t\t\tconsideredCards[key] = cards[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\t//Step 2 ish, sort cards by their categories\n\t\t\tconst cardsPerCategory = {\n\t\t\t\tMonster: [],\n\t\t\t\tFish: [],\n\t\t\t\tLocation: [],\n\t\t\t\tCharacter: [],\n\t\t\t\tMount: [],\n\t\t\t};\n\t\t\tfor (let category of [\n\t\t\t\t\"Monster\",\n\t\t\t\t\"Fish\",\n\t\t\t\t\"Location\",\n\t\t\t\t\"Character\",\n\t\t\t\t\"Mount\",\n\t\t\t]) {\n\t\t\t\tfor (let [key, card] of Object.entries(consideredCards)) {\n\t\t\t\t\tif (card.category === category)\n\t\t\t\t\t\tcardsPerCategory[category].push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst subsetsPerCategory = {\n\t\t\t\tMonster: [],\n\t\t\t\tFish: [],\n\t\t\t\tLocation: [],\n\t\t\t\tCharacter: [],\n\t\t\t\tMount: [],\n\t\t\t};\n\t\t\tfor (let category in cardsPerCategory) {\n\t\t\t\tfor (\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\ti <= this.playerCollectionLevel.maxCardsPerCategory;\n\t\t\t\t\ti++\n\t\t\t\t) {\n\t\t\t\t\tfor (let combination of G.clone.combination(\n\t\t\t\t\t\tcardsPerCategory[category],\n\t\t\t\t\t\ti\n\t\t\t\t\t)) {\n\t\t\t\t\t\tsubsetsPerCategory[category].push(combination);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst bigCartesian = require(\"big-cartesian\");\n\t\t\tconst fastCartesian = require(\"fast-cartesian\");\n\t\t\t/*\n\t\t\tthe Monster array is considerably larger than the others, so by taking a \n\t\t\tfast cartesian product of it with a subset of the other categories we might \n\t\t\tbe able to save time\n\t\t\t*/\n\t\t\tlet cartesian = [];\n\t\t\t// HEAVY WIZARDRY STARTS HERE\n\t\t\tfor (let value of bigCartesian([\n\t\t\t\tfastCartesian([\n\t\t\t\t\tsubsetsPerCategory.Monster,\n\t\t\t\t\tsubsetsPerCategory.Fish,\n\t\t\t\t\tsubsetsPerCategory.Location,\n\t\t\t\t])\n\t\t\t\t\t.filter((element) => {\n\t\t\t\t\t\tlet totalSize = 0;\n\t\t\t\t\t\tfor (let arr of element) {\n\t\t\t\t\t\t\ttotalSize += arr.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\ttotalSize <=\n\t\t\t\t\t\t\tthis.playerCollectionLevel.maxAmountCards\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.map((element) => (element = element.flat())),\n\t\t\t\tsubsetsPerCategory.Character,\n\t\t\t\tsubsetsPerCategory.Mount,\n\t\t\t])) {\n\t\t\t\tlet totalSize = 0;\n\t\t\t\tfor (let arr of value) {\n\t\t\t\t\ttotalSize += arr.length;\n\t\t\t\t}\n\t\t\t\tif (totalSize <= this.playerCollectionLevel.maxAmountCards)\n\t\t\t\t\tcartesian.push(value.flat());\n\t\t\t}\n\n\t\t\t//By this time, cards are filtered by max amount of cards in total and max amount per category, but they might still exceed the point limit, so filter them for that.\n\t\t\tcartesian = cartesian.filter((cardSetup) => {\n\t\t\t\tlet pointCost = 0;\n\t\t\t\tfor (let cardName of cardSetup) {\n\t\t\t\t\tpointCost += cards[cardName].cost;\n\t\t\t\t}\n\t\t\t\treturn pointCost <= this.playerCollectionLevel.maxPoints;\n\t\t\t});\n\n\t\t\t//STEP 3, iterate over cartesian product and assign stat gains\n\t\t\tfor (let subset of cartesian) {\n\t\t\t\tsubset.totalBonusPamp = 0;\n\t\t\t\tsubset.totalBonusMamp = 0;\n\t\t\t\tsubset.totalBonusCf = 0;\n\t\t\t\tsubset.totalBonusMcp = 0;\n\t\t\t\tsubset.totalBonusPcp = 0;\n\t\t\t\tsubset.totalBonusMp = 0;\n\t\t\t\tfor (let cardName of subset) {\n\t\t\t\t\t/* eslint-disable no-mixed-spaces-and-tabs */\n\t\t\t\t\tsubset.totalBonusPamp += cards[cardName].type\n\t\t\t\t\t\t? cards[cardName].type === this.bossType\n\t\t\t\t\t\t\t? cards[cardName][\n\t\t\t\t\t\t\t\t\tcardStore.cards.get(cardName).rarity\n\t\t\t\t\t\t\t  ].pAmp || 0\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t: cards[cardName][cardStore.cards.get(cardName).rarity]\n\t\t\t\t\t\t\t\t.pAmp || 0;\n\n\t\t\t\t\tsubset.totalBonusMamp += cards[cardName].type\n\t\t\t\t\t\t? cards[cardName].type === this.bossType\n\t\t\t\t\t\t\t? cards[cardName][\n\t\t\t\t\t\t\t\t\tcardStore.cards.get(cardName).rarity\n\t\t\t\t\t\t\t  ].mAmp || 0\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t: cards[cardName][cardStore.cards.get(cardName).rarity]\n\t\t\t\t\t\t\t\t.mAmp || 0;\n\n\t\t\t\t\tsubset.totalBonusMcp += cards[cardName].type\n\t\t\t\t\t\t? cards[cardName].type === this.bossType\n\t\t\t\t\t\t\t? cards[cardName][\n\t\t\t\t\t\t\t\t\tcardStore.cards.get(cardName).rarity\n\t\t\t\t\t\t\t  ].mCp || 0\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t: cards[cardName][cardStore.cards.get(cardName).rarity]\n\t\t\t\t\t\t\t\t.mcp || 0;\n\n\t\t\t\t\tsubset.totalBonusPcp += cards[cardName].type\n\t\t\t\t\t\t? cards[cardName].type === this.bossType\n\t\t\t\t\t\t\t? cards[cardName][\n\t\t\t\t\t\t\t\t\tcardStore.cards.get(cardName).rarity\n\t\t\t\t\t\t\t  ].pCp || 0\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t: cards[cardName][cardStore.cards.get(cardName).rarity]\n\t\t\t\t\t\t\t\t.pCp || 0;\n\n\t\t\t\t\tsubset.totalBonusCf +=\n\t\t\t\t\t\tcards[cardName][cardStore.cards.get(cardName).rarity]\n\t\t\t\t\t\t\t.cf || 0;\n\t\t\t\t\t/* eslint-enable no-mixed-spaces-and-tabs */\n\t\t\t\t}\n\t\t\t}\n\t\t\t//STEP 4, calculate dps gain for all valid sets\n\t\t\tlet currentBestSubset = undefined;\n\t\t\tfor (let subset of cartesian) {\n\t\t\t\tsubset.totalDpsGain =\n\t\t\t\t\t(1 +\n\t\t\t\t\t\tthis.calcDpsGainAmp(\n\t\t\t\t\t\t\tsubset.totalBonusPamp,\n\t\t\t\t\t\t\tsubset.totalBonusMamp,\n\t\t\t\t\t\t\tsubset.totalBonusPcp,\n\t\t\t\t\t\t\tsubset.totalBonusMcp,\n\t\t\t\t\t\t\tfinalBossResist\n\t\t\t\t\t\t)) *\n\t\t\t\t\t\t(1 +\n\t\t\t\t\t\t\t(this.ignoreCritCards ? 0 : 1) *\n\t\t\t\t\t\t\t\tthis.calcDpsGainCrit(subset.totalBonusCf)) -\n\t\t\t\t\t1;\n\t\t\t\tif (!currentBestSubset) currentBestSubset = subset;\n\t\t\t\tif (currentBestSubset.totalDpsGain < subset.totalDpsGain)\n\t\t\t\t\tcurrentBestSubset = subset;\n\t\t\t}\n\t\t\tthis.calculating = false;\n\t\t\tthis.bestCards = currentBestSubset;\n\t\t\tconsole.log(this.bestCards);\n\t\t},\n\t\tcalcPiercePercent(pierce, specialDef) {\n\t\t\t//Pierce does not affect damage if base - shred - ignore <= 0\n\t\t\treturn specialDef > 0\n\t\t\t\t? Math.min(pierce / (pierce + 10000), 0.8)\n\t\t\t\t: 0;\n\t\t},\n\t\tcalcDpsGainAmp(\n\t\t\tbonusPamp = 0,\n\t\t\tbonusMamp = 0,\n\t\t\tbonusPcp = 0,\n\t\t\tbonusMcp = 0,\n\t\t\tfinalBossResist = 0\n\t\t) {\n\t\t\t/**\n\t\t\t * for all that is holy, please let me never touch this unholy abomination again\n\t\t\t */\n\t\t\treturn (\n\t\t\t\t((1 +\n\t\t\t\t\t((this.playerPAmp + bonusPamp) * this.playerPMod) /\n\t\t\t\t\t\t(100000 + finalBossResist) +\n\t\t\t\t\t((this.playerMAmp + bonusMamp) * this.playerMMod) /\n\t\t\t\t\t\t(100000 + finalBossResist)) *\n\t\t\t\t\t(1 - this.playerDmgFromCrit) +\n\t\t\t\t\t(1 * this.playerCp * 0.9 +\n\t\t\t\t\t\t((this.playerPAmp + bonusPamp) *\n\t\t\t\t\t\t\tthis.playerPMod *\n\t\t\t\t\t\t\t(this.playerPCp + bonusPcp)) /\n\t\t\t\t\t\t\t(100000 + finalBossResist) +\n\t\t\t\t\t\t((this.playerMAmp + bonusMamp) *\n\t\t\t\t\t\t\tthis.playerMMod *\n\t\t\t\t\t\t\t(this.playerMCp + bonusMcp)) /\n\t\t\t\t\t\t\t(100000 + finalBossResist)) *\n\t\t\t\t\t\tthis.playerDmgFromCrit) /\n\t\t\t\t\t((1 +\n\t\t\t\t\t\t(this.playerPAmp * this.playerPMod) /\n\t\t\t\t\t\t\t(100000 + finalBossResist) +\n\t\t\t\t\t\t(this.playerMAmp * this.playerMMod) /\n\t\t\t\t\t\t\t(100000 + finalBossResist)) *\n\t\t\t\t\t\t(1 - this.playerDmgFromCrit) +\n\t\t\t\t\t\t(1 * this.playerCp * 0.9 +\n\t\t\t\t\t\t\t(this.playerPAmp *\n\t\t\t\t\t\t\t\tthis.playerPMod *\n\t\t\t\t\t\t\t\tthis.playerPCp) /\n\t\t\t\t\t\t\t\t(100000 + finalBossResist) +\n\t\t\t\t\t\t\t(this.playerMAmp *\n\t\t\t\t\t\t\t\tthis.playerMMod *\n\t\t\t\t\t\t\t\tthis.playerMCp) /\n\t\t\t\t\t\t\t\t(100000 + finalBossResist)) *\n\t\t\t\t\t\t\tthis.playerDmgFromCrit) -\n\t\t\t\t1\n\t\t\t);\n\t\t},\n\n\t\tcalcDpsGainCrit(bonusCrit = 0) {\n\t\t\treturn (\n\t\t\t\t(100 + this.playerPower + bonusCrit / 2) /\n\t\t\t\t\t(100 + this.playerPower) -\n\t\t\t\t1\n\t\t\t);\n\t\t},\n\t},\n\tcards,\n\tbossTypes,\n\tcollectionLevels,\n};\n</script>\n\n<style>\nheader {\n\theight: 80px;\n\tbackground-color: white;\n\tcolor: #222;\n}\n\nh4 {\n\tmargin: 0px;\n\tpadding: 0.5rem;\n\tborder-bottom: 2px solid #ddd;\n}\n\naside {\n\tbackground-color: #222;\n}\n\ninput {\n\tmin-width: 0px;\n}\n\nlabel {\n\tcolor: white;\n\ttext-align: left;\n}\n\nform {\n\tdisplay: grid;\n\trow-gap: 0.5rem;\n\n\tpadding: 1rem;\n\n\talign-items: center;\n\tgrid-template-columns: 3fr 1fr;\n}\n\n#app {\n\tfont-family: \"Calibri\", Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\ttext-align: center;\n\tcolor: white;\n}\n\n#mainWrapper {\n\tdisplay: grid;\n\tgrid-template-columns: 4fr 1fr;\n}\n\n#statInput {\n\tposition: fixed;\n\ttop: 0px;\n\tright: 0px;\n\twidth: 20%;\n\theight: 100%;\n\n\tborder: 2px solid #ddd;\n\tdisplay: block;\n}\n\n#main {\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: space-evenly;\n}\n\nbody {\n\tbackground-color: #222;\n\tmargin: 0px;\n\tpadding: 0px;\n}\n\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n\t-webkit-appearance: none;\n\tmargin: 0;\n}\n\ninput[type=\"number\"] {\n\t-moz-appearance: textfield;\n}\n</style>\n","<template>\n\t<div id=\"cardWrapper\">\n\t\t<section id=\"raritySelector\">\n\t\t\t<RaritySelector\n\t\t\t\tv-for=\"rarity in validRarities\"\n\t\t\t\tv-bind:key=\"rarity\"\n\t\t\t\t:rarity=\"rarity\"\n\t\t\t\tv-on:changeRarity=\"handleRarityChange\"\n\t\t\t></RaritySelector>\n\t\t</section>\n\t\t<section\n\t\t\tid=\"cardContainer\"\n\t\t\t:style=\"cardState.enabled ? '' : 'filter: grayscale(100%)'\"\n\t\t\tv-on:click=\"toggleState\"\n\t\t>\n\t\t\t<h4 :style=\"getRarityColours\">\n\t\t\t\t<span id=\"pointCost\">{{ cost }}</span\n\t\t\t\t>{{ name }}\n\t\t\t</h4>\n\t\t\t<div\n\t\t\t\tv-if=\"stats[$data.cardState.rarity]\"\n\t\t\t\tid=\"stats\"\n\t\t\t\t:style=\"getRarityColours\"\n\t\t\t>\n\t\t\t\t<p v-if=\"stats[$data.cardState.rarity].mAmp\" class=\"stat\">\n\t\t\t\t\t<span v-if=\"type\" :style=\"'color:#81B380'\"\n\t\t\t\t\t\t>[{{ type }}]</span\n\t\t\t\t\t>\n\t\t\t\t\tMagic Amplification:\n\t\t\t\t\t<span :style=\"'color:#4ECC30'\">{{\n\t\t\t\t\t\tstats[$data.cardState.rarity].mAmp\n\t\t\t\t\t}}</span>\n\t\t\t\t</p>\n\t\t\t\t<p v-if=\"stats[$data.cardState.rarity].pAmp\" class=\"stat\">\n\t\t\t\t\t<span v-if=\"type\" :style=\"'color:#81B380'\"\n\t\t\t\t\t\t>[{{ type }}]</span\n\t\t\t\t\t>\n\t\t\t\t\tPhysical Amplification:\n\t\t\t\t\t<span :style=\"'color:#4ECC30'\">{{\n\t\t\t\t\t\tstats[$data.cardState.rarity].pAmp\n\t\t\t\t\t}}</span>\n\t\t\t\t</p>\n\t\t\t\t<p v-if=\"stats[$data.cardState.rarity].mCp\" class=\"stat\">\n\t\t\t\t\t<span v-if=\"type\" :style=\"'color:#81B380'\"\n\t\t\t\t\t\t>[{{ type }}]</span\n\t\t\t\t\t>\n\t\t\t\t\tMagic Crit Power:\n\t\t\t\t\t<span :style=\"'color:#4ECC30'\">{{\n\t\t\t\t\t\tstats[$data.cardState.rarity].mCp\n\t\t\t\t\t}}</span>\n\t\t\t\t</p>\n\t\t\t\t<p v-if=\"stats[$data.cardState.rarity].pCp\" class=\"stat\">\n\t\t\t\t\t<span v-if=\"type\" :style=\"'color:#81B380'\"\n\t\t\t\t\t\t>[{{ type }}]</span\n\t\t\t\t\t>\n\t\t\t\t\tPhysical Crit Power:\n\t\t\t\t\t<span :style=\"'color:#4ECC30'\">{{\n\t\t\t\t\t\tstats[$data.cardState.rarity].pCp\n\t\t\t\t\t}}</span>\n\t\t\t\t</p>\n\t\t\t\t<p v-if=\"stats[$data.cardState.rarity].cf\" class=\"stat\">\n\t\t\t\t\tCrit Factor:\n\t\t\t\t\t<span :style=\"'color:#4ECC30'\">{{\n\t\t\t\t\t\tstats[$data.cardState.rarity].cf\n\t\t\t\t\t}}</span>\n\t\t\t\t</p>\n\t\t\t\t<p v-if=\"stats[$data.cardState.rarity].mpInc\" class=\"stat\">\n\t\t\t\t\tMax MP:\n\t\t\t\t\t<span :style=\"'color:#4ECC30'\">{{\n\t\t\t\t\t\tstats[$data.cardState.rarity].mpInc\n\t\t\t\t\t}}</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div class=\"shadow\" :style=\"getRarityColours\"></div>\n\t\t</section>\n\t</div>\n</template>\n\n<script>\nimport RaritySelector from \"./RaritySelector\";\nimport cardStore from \"../Stores/CardStore\";\n\nexport default {\n\tname: \"Card\",\n\tprops: [\"name\", \"cost\", \"category\", \"stats\", \"type\"],\n\tcomponents: {\n\t\tRaritySelector,\n\t},\n\tdata() {\n\t\tlet cardState = cardStore.cards.get(this.name);\n\t\treturn {\n\t\t\tcardState,\n\t\t};\n\t},\n\tcomputed: {\n\t\tgetRarityColours() {\n\t\t\tlet colours = {\n\t\t\t\tWhite: {\n\t\t\t\t\t\"--radial-start-colour\": \"#2E3947\",\n\t\t\t\t\t\"--radial-end-colour\": \"#18202C\",\n\t\t\t\t\t\"--linear-start-colour\": \"#262D3C\",\n\t\t\t\t\t\"--linear-end-colour\": \"#4D5361\",\n\t\t\t\t\t\"--shadow-colour\": \"#435360\",\n\t\t\t\t},\n\t\t\t\tGreen: {\n\t\t\t\t\t\"--radial-start-colour\": \"#183c21\",\n\t\t\t\t\t\"--radial-end-colour\": \"#182821\",\n\t\t\t\t\t\"--linear-start-colour\": \"#1e372c\",\n\t\t\t\t\t\"--linear-end-colour\": \"#294939\",\n\t\t\t\t\t\"--shadow-colour\": \"#237813\",\n\t\t\t\t},\n\t\t\t\tBlue: {\n\t\t\t\t\t\"--radial-start-colour\": \"#184563\",\n\t\t\t\t\t\"--radial-end-colour\": \"#102843\",\n\t\t\t\t\t\"--linear-start-colour\": \"#1B3252\",\n\t\t\t\t\t\"--linear-end-colour\": \"#39597B\",\n\t\t\t\t\t\"--shadow-colour\": \"#1C64B3\",\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn colours[this.cardState.rarity];\n\t\t},\n\t\tvalidRarities() {\n\t\t\treturn Object.keys(this.stats).filter(\n\t\t\t\t(rarity) => this.stats[rarity] != null\n\t\t\t);\n\t\t},\n\t},\n\tmethods: {\n\t\ttoggleState() {\n\t\t\tthis.cardState.enabled = !this.cardState.enabled;\n\t\t},\n\t\thandleRarityChange(newRarity) {\n\t\t\tthis.cardState.rarity = newRarity;\n\t\t},\n\t},\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n#cardWrapper {\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 1rem;\n\tbox-shadow: 0px 0px 10px #000;\n}\n\n#raritySelector {\n\twidth: 18rem;\n\tdisplay: flex;\n\tjustify-content: center;\n}\n\n#raritySelector > div {\n\tflex-grow: 1;\n\theight: 2rem;\n\tdisplay: block;\n}\n\n#cardContainer {\n\tdisplay: flex;\n\tmin-height: 8rem;\n\tflex-direction: column;\n\tposition: relative;\n}\n#pointCost {\n\tposition: absolute;\n\tleft: 1rem;\n\tcolor: white;\n}\nh4 {\n\tbackground-image: linear-gradient(\n\t\tvar(--linear-start-colour),\n\t\tvar(--linear-end-colour)\n\t);\n\tbackground-clip: border-box;\n\tcolor: white;\n\tpadding: 10px;\n\tmargin: 0px;\n\tposition: relative;\n\tborder-bottom: 1px solid #eee;\n}\n#stats {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\n\tbackground-image: radial-gradient(\n\t\tat 50% bottom,\n\t\tvar(--radial-start-colour),\n\t\tvar(--radial-end-colour)\n\t);\n\n\tpadding: 1rem;\n\tmin-height: 3rem;\n\theight: 100%;\n\n\tcolor: white;\n\tfont-size: 1rem;\n}\n\n.stat {\n\tfont-size: 0.9rem;\n\tmargin: 0.3rem 0px;\n}\n\n.shadow {\n\tposition: absolute;\n\twidth: 100%;\n\theight: 100%;\n\tbox-shadow: inset 0 0 0.5rem var(--shadow-colour);\n\ttop: 0;\n\tleft: 0;\n}\n</style>\n","<template>\r\n\t<div\r\n\t\t:style=\"getRaritySelectorColours(rarity)\"\r\n\t\tv-on:click=\"$emit('changeRarity', this.rarity)\"\r\n\t></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\tname: \"RaritySelector\",\r\n\tprops: [\"rarity\"],\r\n\tmethods: {\r\n\t\tgetRaritySelectorColours(rarity) {\r\n\t\t\tlet colours = {\r\n\t\t\t\tWhite: \"#E8E6E3\",\r\n\t\t\t\tGreen: \"#29C75D\",\r\n\t\t\t\tBlue: \"#44CBFC\",\r\n\t\t\t};\r\n\t\t\treturn `background-color: ${colours[rarity]}`;\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>","import { render } from \"./RaritySelector.vue?vue&type=template&id=d65de5e0\"\nimport script from \"./RaritySelector.vue?vue&type=script&lang=js\"\nexport * from \"./RaritySelector.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","const cards = new Map();\r\n\r\nexport default {\r\n\tcards,\r\n};\r\n","import { render } from \"./Card.vue?vue&type=template&id=e40d53b8&scoped=true\"\nimport script from \"./Card.vue?vue&type=script&lang=js\"\nexport * from \"./Card.vue?vue&type=script&lang=js\"\n\nimport \"./Card.vue?vue&type=style&index=0&id=e40d53b8&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-e40d53b8\"\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=26e5d303\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=26e5d303&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=26e5d303&lang=css\"","/*\n *  Licensed under the MIT license.\n *  http://www.opensource.org/licenses/mit-license.php\n *\n *  References:\n *    http://www.ruby-doc.org/core-2.0/Array.html#method-i-combination\n *    http://www.ruby-doc.org/core-2.0/Array.html#method-i-permutation\n */\n\n(function(root, factory) {\n\t/*if (typeof define === 'function' && define.amd) {\n    define([], factory)\n  } else*/ if (\n\t\ttypeof exports === 'object'\n\t) {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.G = factory();\n\t}\n})(this, function() {\n\t'use strict';\n\n\t/** @exports G */\n\tconst G = {\n\t\tclones: false,\n\n\t\t/**\n\t\t * Calculates a factorial\n\t\t * @param {Number} n - The number to operate the factorial on.\n\t\t * @returns {Number} n!\n\t\t */\n\t\tfactorial: function factorial(n) {\n\t\t\tfor (var ans = 1; n; ans *= n--);\n\t\t\treturn ans;\n\t\t},\n\n\t\t/**\n\t\t * Converts a number to the factorial number system. Digits are in least significant order.\n\t\t * @param {Number} n - Integer in base 10\n\t\t * @returns {Array} digits of n in factoradic in least significant order\n\t\t */\n\t\tfactoradic: function factoradic(n) {\n\t\t\tlet radix = 1;\n\t\t\tfor (var digit = 1; radix < n; radix *= ++digit);\n\t\t\tif (radix > n) radix /= digit--;\n\t\t\tlet result = [0];\n\t\t\tfor (; digit; radix /= digit--) {\n\t\t\t\tresult[digit] = Math.floor(n / radix);\n\t\t\t\tn %= radix;\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t/**\n\t\t * Calculates the number of possible permutations of \"k\" elements in a set of size \"n\".\n\t\t * @param {Number} n - Number of elements in the set.\n\t\t * @param {Number} k - Number of elements to choose from the set.\n\t\t * @returns {Number} n P k\n\t\t */\n\t\tP: function P(n, k) {\n\t\t\treturn this.factorial(n) / this.factorial(n - k);\n\t\t},\n\n\t\t/**\n\t\t * Calculates the number of possible combinations of \"k\" elements in a set of size \"n\".\n\t\t * @param {Number} n - Number of elements in the set.\n\t\t * @param {Number} k - Number of elements to choose from the set.\n\t\t * @returns {Number} n C k\n\t\t */\n\t\tC: function C(n, k) {\n\t\t\treturn this.P(n, k) / this.factorial(k);\n\t\t},\n\n\t\t/**\n\t\t * Higher level method for counting number of possible combinations of \"k\" elements from a set of size \"n\".\n\t\t * @param {Number} n - Number of elements in the set.\n\t\t * @param {Number} k - Number of elements to choose from the set.\n\t\t * @param {Object} [options]\n\t\t * @param {Boolean} options.replace - Is replacement allowed after each choice?\n\t\t * @param {Boolean} options.ordered - Does the order of the choices matter?\n\t\t * @returns {Number} Number of possible combinations.\n\t\t */\n\t\tchoices: function choices(n, k, options = {}) {\n\t\t\tif (options.replace) {\n\t\t\t\tif (options.ordered) {\n\t\t\t\t\treturn Math.pow(n, k);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.C(n + k - 1, k);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (options.ordered) {\n\t\t\t\t\treturn this.P(n, k);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.C(n, k);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Generates all combinations of a set.\n\t\t * @param {Array|String} arr - The set of elements.\n\t\t * @param {Number} [size=arr.length] - Number of elements to choose from the set.\n\t\t * @returns {Generator} yields each combination as an array\n\t\t */\n\t\tcombination: function* combination(arr, size = arr.length) {\n\t\t\tlet that = this;\n\t\t\tlet end = arr.length - 1;\n\t\t\tlet data = [];\n\t\t\tyield* combinationUtil(0, 0);\n\t\t\tfunction* combinationUtil(start, index) {\n\t\t\t\tif (index === size) {\n\t\t\t\t\t// Current combination is ready to be processed, yield it\n\t\t\t\t\treturn yield that.clones ? data.slice() : data; // .slice() is a JS idiom for shallow cloning an array\n\t\t\t\t}\n\t\t\t\t// replace index with all possible elements. The condition\n\t\t\t\t// \"end - i + 1 >= size - index\" makes sure that including one element\n\t\t\t\t// at index will make a combination with remaining elements\n\t\t\t\t// at remaining positions\n\t\t\t\tfor (let i = start; i <= end && end - i + 1 >= size - index; i++) {\n\t\t\t\t\tdata[index] = arr[i];\n\t\t\t\t\tyield* combinationUtil(i + 1, index + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Generates all permutations of a set.\n\t\t * @param {Array|String} arr - The set of elements.\n\t\t * @param {Number} [size=arr.length] - Number of elements to choose from the set.\n\t\t * @returns {Generator} yields each permutation as an array\n\t\t */\n\t\tpermutation: function* permutation(arr, size = arr.length) {\n\t\t\tlet that = this;\n\t\t\tlet len = arr.length;\n\t\t\tif (size === len) {\n\t\t\t\t// switch to Heap's algorithm. it's more efficient\n\t\t\t\treturn yield* heapsAlg(arr, that.clones);\n\t\t\t}\n\t\t\tlet data = [];\n\t\t\tlet indecesUsed = []; // permutations do not repeat elements. keep track of the indeces of the elements already used\n\t\t\tyield* permutationUtil(0);\n\t\t\tfunction* permutationUtil(index) {\n\t\t\t\tif (index === size) {\n\t\t\t\t\treturn yield that.clones ? data.slice() : data;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\tif (!indecesUsed[i]) {\n\t\t\t\t\t\tindecesUsed[i] = true;\n\t\t\t\t\t\tdata[index] = arr[i];\n\t\t\t\t\t\tyield* permutationUtil(index + 1);\n\t\t\t\t\t\tindecesUsed[i] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Generates all possible subsets of a set (a.k.a. power set).\n\t\t * @param {Array|String} arr - The set of elements.\n\t\t * @returns {Generator} yields each subset as an array\n\t\t */\n\t\tpowerSet: function* powerSet(arr) {\n\t\t\tlet that = this;\n\t\t\tlet len = arr.length;\n\t\t\tlet data = [];\n\t\t\tyield* powerUtil(0, 0);\n\t\t\tfunction* powerUtil(start, index) {\n\t\t\t\tdata.length = index;\n\t\t\t\tyield that.clones ? data.slice() : data;\n\t\t\t\tif (index === len) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (let i = start; i < len; i++) {\n\t\t\t\t\tdata[index] = arr[i];\n\t\t\t\t\tyield* powerUtil(i + 1, index + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Generates the permutation of the combinations of a set.\n\t\t * @param {Array|String} arr - The set of elements.\n\t\t * @returns {Generator} yields each permutation as an array\n\t\t */\n\t\tpermutationCombination: function* permutationCombination(arr) {\n\t\t\tlet that = this;\n\t\t\tlet len = arr.length;\n\t\t\tlet data = [];\n\t\t\tlet indecesUsed = [];\n\t\t\tyield* permutationUtil(0);\n\t\t\tfunction* permutationUtil(index) {\n\t\t\t\tdata.length = index;\n\t\t\t\tyield that.clones ? data.slice() : data;\n\t\t\t\tif (index === len) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\tif (!indecesUsed[i]) {\n\t\t\t\t\t\tindecesUsed[i] = true;\n\t\t\t\t\t\tdata[index] = arr[i];\n\t\t\t\t\t\tyield* permutationUtil(index + 1);\n\t\t\t\t\t\tindecesUsed[i] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Generates all possible \"numbers\" from the digits of a set.\n\t\t * @param {Array|String} arr - The set of digits.\n\t\t * @param {Number} [size=arr.length] - How many digits will be in the numbers.\n\t\t * @returns {Generator} yields all digits as an array\n\t\t */\n\t\tbaseN: function* baseN(arr, size = arr.length) {\n\t\t\tlet that = this;\n\t\t\tlet len = arr.length;\n\t\t\tlet data = [];\n\t\t\tyield* baseNUtil(0);\n\t\t\tfunction* baseNUtil(index) {\n\t\t\t\tif (index === size) {\n\t\t\t\t\treturn yield that.clones ? data.slice() : data;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\tdata[index] = arr[i];\n\t\t\t\t\tyield* baseNUtil(index + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Infinite generator for all possible \"numbers\" from a set of digits.\n\t\t * @param {Array|String} arr - The set of digits\n\t\t * @returns {Generator} yields all digits as an array\n\t\t */\n\t\tbaseNAll: function* permutationAll(arr) {\n\t\t\tfor (let len = 1; true; len++) {\n\t\t\t\tyield* this.baseN(arr, len);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Generates the cartesian product of the sets.\n\t\t * @param {...(Array|String)} sets - variable number of sets of n elements.\n\t\t * @returns {Generator} yields each product as an array\n\t\t */\n\t\tcartesian: function* cartesian(...sets) {\n\t\t\tlet that = this;\n\t\t\tlet data = [];\n\t\t\tyield* cartesianUtil(0);\n\t\t\tfunction* cartesianUtil(index) {\n\t\t\t\tif (index === sets.length) {\n\t\t\t\t\treturn yield that.clones ? data.slice() : data;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < sets[index].length; i++) {\n\t\t\t\t\tdata[index] = sets[index][i];\n\t\t\t\t\tyield* cartesianUtil(index + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Shuffles an array in place using the Fisher–Yates shuffle.\n\t\t * @param {Array} arr - A set of elements.\n\t\t * @returns {Array} a random, unbiased perutation of arr\n\t\t */\n\t\tshuffle: function shuffle(arr) {\n\t\t\tfor (let i = arr.length - 1; i > 0; i--) {\n\t\t\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t\t\tswap(arr, i, j);\n\t\t\t}\n\t\t\treturn arr;\n\t\t},\n\t};\n\n\tlet clone = { clones: true };\n\tclone.combination = G.combination;\n\tclone.permutation = G.permutation;\n\tclone.powerSet = G.powerSet;\n\tclone.permutationCombination = G.permutationCombination;\n\tclone.baseN = G.baseN;\n\tclone.baseNAll = G.baseNAll;\n\tclone.cartesian = G.cartesian;\n\n\tG.clone = clone;\n\n\t/*\n\t * More efficient alorithm for permutations of All elements in an array. Doesn't\n\t * work for \"sub-permutations\", e.g. permutations of 3 elements from [1, 2, 3, 4, 5]\n\t */\n\tfunction* heapsAlg(arr, clone) {\n\t\tlet size = arr.length;\n\t\tif (typeof arr === 'string') {\n\t\t\tarr = arr.split('');\n\t\t}\n\t\tyield* heapsUtil(0);\n\t\tfunction* heapsUtil(index) {\n\t\t\tif (index === size) {\n\t\t\t\treturn yield clone ? arr.slice() : arr;\n\t\t\t}\n\n\t\t\tfor (let j = index; j < size; j++) {\n\t\t\t\tswap(arr, index, j);\n\t\t\t\tyield* heapsUtil(index + 1);\n\t\t\t\tswap(arr, index, j);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*\n\t * Swaps two array elements.\n\t */\n\tfunction swap(arr, i, j) {\n\t\tlet len = arr.length;\n\t\tif (i >= len || j >= len) {\n\t\t\tconsole.warn(\"Swapping an array's elements past its length.\");\n\t\t}\n\t\tlet temp = arr[j];\n\t\tarr[j] = arr[i];\n\t\tarr[i] = temp;\n\t\treturn arr;\n\t}\n\n\treturn G;\n});\n"],"sourceRoot":""}